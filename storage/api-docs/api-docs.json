{
    "openapi": "3.0.0",
    "info": {
        "title": "Swagger with Laravel",
        "version": "1.0.0"
    },
    "paths": {
        "/api/employee/employeeCompleteData": {
            "post": {
                "tags": [
                    "Employee"
                ],
                "summary": "Add details to employee",
                "operationId": "1dbb2ce22965cc6ef99407331b317302",
                "requestBody": {
                    "required": false,
                    "content": {
                        "multipart/form-data": {
                            "schema": {
                                "properties": {
                                    "description": {
                                        "description": "Description of the employee",
                                        "type": "string"
                                    },
                                    "phone_number_1": {
                                        "description": "phone_number_1",
                                        "type": "string"
                                    },
                                    "phone_number_2": {
                                        "description": "phone_number_2",
                                        "type": "string"
                                    },
                                    "mobile_number_1": {
                                        "description": "mobile_number_1",
                                        "type": "string"
                                    },
                                    "mobile_number_2": {
                                        "description": "mobile_number_2",
                                        "type": "string"
                                    },
                                    "fax_number": {
                                        "description": "fax_number",
                                        "type": "string"
                                    },
                                    "whatsapp_number": {
                                        "description": "whatsapp_number",
                                        "type": "string"
                                    },
                                    "facebook_link": {
                                        "description": "facebook_link",
                                        "type": "string"
                                    },
                                    "website": {
                                        "description": "website",
                                        "type": "string"
                                    },
                                    "city": {
                                        "description": "city",
                                        "type": "string"
                                    },
                                    "bitTitle": {
                                        "description": "bitTitle",
                                        "type": "string"
                                    },
                                    "street": {
                                        "description": "street",
                                        "type": "string"
                                    },
                                    "specialMarque": {
                                        "description": "specialMarque",
                                        "type": "string"
                                    },
                                    "lat": {
                                        "description": "lat",
                                        "type": "integer"
                                    },
                                    "long": {
                                        "description": "long",
                                        "type": "integer"
                                    },
                                    "user_id": {
                                        "description": "User ID",
                                        "type": "integer"
                                    },
                                    "service_id": {
                                        "description": "Service ID",
                                        "type": "integer"
                                    },
                                    "section_id": {
                                        "description": "Section ID",
                                        "type": "integer"
                                    },
                                    "works[0][image]": {
                                        "description": "Image work 1",
                                        "type": "string",
                                        "format": "binary",
                                        "nullable": true
                                    },
                                    "works[1][image]": {
                                        "description": "Image work 2",
                                        "type": "string",
                                        "format": "binary",
                                        "nullable": true
                                    },
                                    "works[2][image]": {
                                        "description": "Image work 3",
                                        "type": "string",
                                        "format": "binary",
                                        "nullable": true
                                    },
                                    "works[3][image]": {
                                        "description": "Image work 4",
                                        "type": "string",
                                        "format": "binary",
                                        "nullable": true
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Employee details add successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "successfully"
                                        },
                                        "employee": {
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Validation error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "message": {
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/employee/updateEmployeeCompleteData/{id}": {
            "post": {
                "tags": [
                    "Employee"
                ],
                "summary": "Update details of an employee",
                "operationId": "6ad2c2451ded040b0dea5af036770cb8",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the employee to update data",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    }
                ],
                "requestBody": {
                    "required": false,
                    "content": {
                        "multipart/form-data": {
                            "schema": {
                                "properties": {
                                    "desc": {
                                        "description": "Description of the employee",
                                        "type": "string"
                                    },
                                    "location": {
                                        "description": "location in details",
                                        "type": "string"
                                    },
                                    "imageSSN": {
                                        "description": "Image of the SSN",
                                        "type": "string",
                                        "format": "binary"
                                    },
                                    "livePhoto": {
                                        "description": "Live photo of the employee",
                                        "type": "string",
                                        "format": "binary"
                                    },
                                    "nationalId": {
                                        "description": "National ID of the employee",
                                        "type": "string"
                                    },
                                    "min_price": {
                                        "description": "Minimum price of the employee",
                                        "type": "integer"
                                    },
                                    "user_id": {
                                        "description": "User ID of the employee",
                                        "type": "integer"
                                    },
                                    "service_id": {
                                        "description": "Service ID of the employee",
                                        "type": "integer"
                                    },
                                    "works[0][image]": {
                                        "description": "Image work 1",
                                        "type": "string",
                                        "format": "binary",
                                        "nullable": true
                                    },
                                    "works[1][image]": {
                                        "description": "Image work 2",
                                        "type": "string",
                                        "format": "binary",
                                        "nullable": true
                                    },
                                    "works[2][image]": {
                                        "description": "Image work 3",
                                        "type": "string",
                                        "format": "binary",
                                        "nullable": true
                                    },
                                    "works[3][image]": {
                                        "description": "Image work 4",
                                        "type": "string",
                                        "format": "binary",
                                        "nullable": true
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Employee details updated successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Employee profile details updated successfully"
                                        },
                                        "employee": {
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Validation error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "message": {
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/employee/updateWorksImage/{user_id}": {
            "post": {
                "tags": [
                    "Employee"
                ],
                "summary": "Edit an employee works image",
                "operationId": "c1822af1deb09f2dd47b07a37fb470d5",
                "parameters": [
                    {
                        "name": "user_id",
                        "in": "path",
                        "description": "ID of the user",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "multipart/form-data": {
                            "schema": {
                                "properties": {
                                    "works[0][image]": {
                                        "description": "Image work 1",
                                        "type": "string",
                                        "format": "binary",
                                        "nullable": true
                                    },
                                    "works[1][image]": {
                                        "description": "Image work 2",
                                        "type": "string",
                                        "format": "binary",
                                        "nullable": true
                                    },
                                    "works[2][image]": {
                                        "description": "Image work 3",
                                        "type": "string",
                                        "format": "binary",
                                        "nullable": true
                                    },
                                    "works[3][image]": {
                                        "description": "Image work 4",
                                        "type": "string",
                                        "format": "binary",
                                        "nullable": true
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Employee updated successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "success"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Employee updated successfully"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation errors",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "error"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Validation errors"
                                        },
                                        "errors": {
                                            "type": "object",
                                            "additionalProperties": {
                                                "type": "array",
                                                "items": {
                                                    "type": "string"
                                                }
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Employee not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Employee not found"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/employee/employeeProfile/{id}": {
            "get": {
                "tags": [
                    "Employee"
                ],
                "summary": "Show employee profile",
                "description": "Show employee profile by employee id",
                "operationId": "2297a9c817dc43c2ad915af565cd1fe9",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the employee to show profile",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Show employee profile successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "boolean"
                                        },
                                        "message": {
                                            "type": "string"
                                        },
                                        "data": {
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Employee not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "boolean"
                                        },
                                        "message": {
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/employee/editEmployeeProfile/{id}": {
            "post": {
                "tags": [
                    "Employee"
                ],
                "summary": "Update employee profile",
                "operationId": "editEmployeeProfile",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the employee to update",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "required": false,
                    "content": {
                        "multipart/form-data": {
                            "schema": {
                                "properties": {
                                    "name": {
                                        "description": "Name of the employee",
                                        "type": "string"
                                    },
                                    "desc": {
                                        "description": "Description of the employee",
                                        "type": "string"
                                    },
                                    "min_price": {
                                        "description": "Minimum price",
                                        "type": "integer"
                                    },
                                    "image": {
                                        "description": "Profile image of the employee",
                                        "type": "string",
                                        "format": "binary"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Employee profile updated successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Employee profile updated successfully"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Validation error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Validation error message"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Employee not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Employee not found"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/employee/changeEmployeeStatus/{id}": {
            "post": {
                "tags": [
                    "Employee"
                ],
                "summary": "Change employee status between ['available', 'busy']",
                "operationId": "6805a37151be200e6f5f0eaabacf7d49",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the employee",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "multipart/form-data": {
                            "schema": {
                                "properties": {
                                    "status": {
                                        "description": "Employee status",
                                        "type": "string",
                                        "example": "available"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Change employee status successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "true"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Change status successfully"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "No employee found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "false"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "No employee found"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation errors",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "false"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Validation error"
                                        },
                                        "errors": {
                                            "type": "object",
                                            "additionalProperties": {
                                                "type": "string"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Server error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "false"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Server error"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/employee/changeCheckByAdmin/{id}": {
            "post": {
                "tags": [
                    "Employee"
                ],
                "summary": "Change employee status between ['accepted','rejected']",
                "operationId": "5bb91cf63953f01eaed6520b233c54d0",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the employee",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "multipart/form-data": {
                            "schema": {
                                "properties": {
                                    "checkByAdmin": {
                                        "description": "checkByAdmin to show Employee data",
                                        "type": "string",
                                        "example": "accepted"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Change employee status successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "true"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Change status successfully"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "No employee found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "false"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "No employee found"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation errors",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "false"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Validation error"
                                        },
                                        "errors": {
                                            "type": "object",
                                            "additionalProperties": {
                                                "type": "string"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Server error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "false"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Server error"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/employee/showEmployeeLastWorks/{user_id}": {
            "get": {
                "tags": [
                    "Employee"
                ],
                "summary": "Show all employee work images",
                "description": "Show all employee work images by user ID",
                "operationId": "3acec25212b0b268039cdfd10e73b38d",
                "parameters": [
                    {
                        "name": "user_id",
                        "in": "path",
                        "description": "ID of the user to show all last works images",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Show last work successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "true"
                                        },
                                        "Employee Work Image": {
                                            "type": "array",
                                            "items": {
                                                "type": "string"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "No user found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "No user found"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/employee/section/{section_id}/service/{service_id}": {
            "get": {
                "tags": [
                    "Employee"
                ],
                "summary": "Get all employees in section and service",
                "operationId": "8cf253a0b16580eabe231c90d4f50577",
                "parameters": [
                    {
                        "name": "section_id",
                        "in": "path",
                        "description": "ID of the section",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "service_id",
                        "in": "path",
                        "description": "ID of the service",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "allemployee": {
                                            "type": "array",
                                            "items": {
                                                "type": "object"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "No employees found in this service",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "No employee found in this service"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/location/store": {
            "post": {
                "tags": [
                    "location"
                ],
                "summary": "Add location to user",
                "operationId": "b82460b88165abfedd021a6041a76a57",
                "requestBody": {
                    "required": true,
                    "content": {
                        "multipart/form-data": {
                            "schema": {
                                "properties": {
                                    "city": {
                                        "description": "City name",
                                        "type": "string"
                                    },
                                    "bitTitle": {
                                        "description": "Title or nickname for the location",
                                        "type": "string"
                                    },
                                    "street": {
                                        "description": "Street name",
                                        "type": "string"
                                    },
                                    "specialMarque": {
                                        "description": "Special landmark near the location",
                                        "type": "string"
                                    },
                                    "lat": {
                                        "description": "Latitude coordinate",
                                        "type": "number",
                                        "format": "float"
                                    },
                                    "long": {
                                        "description": "Longitude coordinate",
                                        "type": "number",
                                        "format": "float"
                                    },
                                    "user_id": {
                                        "description": "User ID",
                                        "type": "integer"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Location added successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Added Location successfully"
                                        },
                                        "location": {
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation errors",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "An error occurred"
                                        },
                                        "error": {
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/location/showUsersLocation/{user_id}": {
            "get": {
                "tags": [
                    "location"
                ],
                "summary": "Show all locations",
                "description": "Show all locations for a user by user ID",
                "operationId": "b3d9d65bb8c702d90091082bb73e8a55",
                "parameters": [
                    {
                        "name": "user_id",
                        "in": "path",
                        "description": "ID of the user to show all locations",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Show locations successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "locations": {
                                            "type": "array",
                                            "items": {
                                                "type": "object"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "No locations found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "No locations found"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/location/update/{id}": {
            "post": {
                "tags": [
                    "location"
                ],
                "summary": "Update user location",
                "operationId": "a7516cb4e9c3a29bfec937be5bde2c54",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the location",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "multipart/form-data": {
                            "schema": {
                                "properties": {
                                    "city": {
                                        "description": "City name",
                                        "type": "string"
                                    },
                                    "bitTitle": {
                                        "description": "Title or nickname for the location",
                                        "type": "string"
                                    },
                                    "street": {
                                        "description": "Street name",
                                        "type": "string"
                                    },
                                    "specialMarque": {
                                        "description": "Special landmark near the location",
                                        "type": "string"
                                    },
                                    "lat": {
                                        "description": "Latitude coordinate",
                                        "type": "number",
                                        "format": "float"
                                    },
                                    "long": {
                                        "description": "Longitude coordinate",
                                        "type": "number",
                                        "format": "float"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Location updated successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Updated Location successfully"
                                        },
                                        "location": {
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Location not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Location not found"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation errors",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Validation errors"
                                        },
                                        "errors": {
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/location/destroy/{id}": {
            "delete": {
                "tags": [
                    "location"
                ],
                "summary": "Delete a location",
                "description": "Delete location for a user by location ID",
                "operationId": "6a9c28bd8d33ed2adb83a98f0392fc2c",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the location to delete",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Location deleted successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Delete Location successfully"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Location not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Location not found"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/login": {
            "post": {
                "tags": [
                    "userAuth"
                ],
                "summary": "Authenticate user and generate token",
                "operationId": "c5e838284c7f343f0e5e5fd589161c96",
                "parameters": [
                    {
                        "name": "email_or_phone",
                        "in": "query",
                        "description": "User's email or phone to login",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "example": "ahmed@gmail.com"
                        }
                    },
                    {
                        "name": "password",
                        "in": "query",
                        "description": "User's password",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "example": "Am123456"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Login successful"
                    },
                    "401": {
                        "description": "Invalid credentials"
                    }
                }
            }
        },
        "/api/sections": {
            "get": {
                "tags": [
                    "sections"
                ],
                "summary": "Show all services",
                "operationId": "ec6bc0921c4783e5344d7c888da6f7e8",
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "sections": {
                                            "type": "array",
                                            "items": {
                                                "type": "object"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Unauthorized"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/sections/show/{section_id}": {
            "get": {
                "tags": [
                    "sections"
                ],
                "summary": "Get section by id",
                "operationId": "c453b257733d2d551d518ca76f6d4ce6",
                "parameters": [
                    {
                        "name": "section_id",
                        "in": "path",
                        "description": "section id",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/sections/create": {
            "post": {
                "tags": [
                    "sections"
                ],
                "summary": "create a new section",
                "operationId": "1a1c2b283d3b71d8b2cf4db1e7c1730f",
                "requestBody": {
                    "required": true,
                    "content": {
                        "multipart/form-data": {
                            "schema": {
                                "properties": {
                                    "name": {
                                        "description": "name of service",
                                        "type": "string"
                                    },
                                    "desc": {
                                        "description": "section description",
                                        "type": "string"
                                    },
                                    "image": {
                                        "description": "section image",
                                        "type": "string",
                                        "format": "binary"
                                    },
                                    "comment": {
                                        "description": "to access image use https://mahllola.online/public/image  example : https://mahllola.online/public/storage/services_folder/ttyVNuauz67kqXX40jyewMwh3DWpdFjjyJ0pIiPd.jpg",
                                        "type": "string"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "add new section successfully"
                    },
                    "422": {
                        "description": "Validation errors"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/sections/edit/{section_id}": {
            "post": {
                "tags": [
                    "sections"
                ],
                "summary": "edit to sections",
                "operationId": "47acddab2a16721fe49a2e44ca9a142d",
                "parameters": [
                    {
                        "name": "section_id",
                        "in": "path",
                        "description": "ID of the section",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "multipart/form-data": {
                            "schema": {
                                "properties": {
                                    "name": {
                                        "description": "section name",
                                        "type": "string"
                                    },
                                    "desc": {
                                        "description": "section description",
                                        "type": "string"
                                    },
                                    "image": {
                                        "description": "Image file",
                                        "type": "string",
                                        "format": "binary"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "update section successfully"
                    },
                    "422": {
                        "description": "Validation errors"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/sections/delete/{section_id}": {
            "delete": {
                "tags": [
                    "sections"
                ],
                "summary": "Delete an sections",
                "description": "Delete section by ID",
                "operationId": "e9e268ca28726b16a8f449d6ce7e6b51",
                "parameters": [
                    {
                        "name": "section_id",
                        "in": "path",
                        "description": "ID of the service to delete",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "section deleted successfully"
                    },
                    "404": {
                        "description": "section not found"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/services": {
            "get": {
                "tags": [
                    "services"
                ],
                "summary": "Show all services",
                "operationId": "4c175c5d6594b4a5112bbe15a46e2bb4",
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "services": {
                                            "type": "array",
                                            "items": {
                                                "type": "object"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Unauthorized"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/services/show/{service_id}": {
            "get": {
                "tags": [
                    "services"
                ],
                "summary": "Get service by id",
                "operationId": "c9bbb81ee35bf04820201e070ba196d3",
                "parameters": [
                    {
                        "name": "service_id",
                        "in": "path",
                        "description": "service id",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/services/show/section/{section_id}": {
            "get": {
                "tags": [
                    "services"
                ],
                "summary": "Get all services in section",
                "operationId": "d6c7a2d79c5cf3b5b5397fff681c0eaa",
                "parameters": [
                    {
                        "name": "section_id",
                        "in": "path",
                        "description": "ID of the section",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "allemployee": {
                                            "type": "array",
                                            "items": {
                                                "type": "object"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "No services found in this section",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "No employee found in this service"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/services/create": {
            "post": {
                "tags": [
                    "services"
                ],
                "summary": "create a new service",
                "operationId": "e5517ad7c6d1995a79a3055f358a45f9",
                "requestBody": {
                    "required": true,
                    "content": {
                        "multipart/form-data": {
                            "schema": {
                                "properties": {
                                    "name": {
                                        "description": "name of service",
                                        "type": "string"
                                    },
                                    "desc": {
                                        "description": "service description",
                                        "type": "string"
                                    },
                                    "section_id": {
                                        "description": "section id",
                                        "type": "integer"
                                    },
                                    "image": {
                                        "description": "service image",
                                        "type": "string",
                                        "format": "binary"
                                    },
                                    "comment": {
                                        "description": "to access image use https://mahllola.online/public/image  example : https://mahllola.online/public/storage/services_folder/ttyVNuauz67kqXX40jyewMwh3DWpdFjjyJ0pIiPd.jpg",
                                        "type": "string"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "add new service successfully"
                    },
                    "422": {
                        "description": "Validation errors"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/services/edit/{service_id}": {
            "post": {
                "tags": [
                    "services"
                ],
                "summary": "edit to services",
                "operationId": "b573ddab475963d46ba3b1184f896737",
                "parameters": [
                    {
                        "name": "service_id",
                        "in": "path",
                        "description": "ID of the service",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "multipart/form-data": {
                            "schema": {
                                "properties": {
                                    "name": {
                                        "description": "service name",
                                        "type": "string"
                                    },
                                    "desc": {
                                        "description": "service description",
                                        "type": "string"
                                    },
                                    "section_id": {
                                        "description": "section id",
                                        "type": "integer"
                                    },
                                    "image": {
                                        "description": "Image file",
                                        "type": "string",
                                        "format": "binary"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "update service successfully"
                    },
                    "422": {
                        "description": "Validation errors"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/services/delete/{service_id}": {
            "delete": {
                "tags": [
                    "services"
                ],
                "summary": "Delete an service",
                "description": "Delete service by ID",
                "operationId": "521513b2864d72e5a241e452726d3092",
                "parameters": [
                    {
                        "name": "service_id",
                        "in": "path",
                        "description": "ID of the service to delete",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "service deleted successfully"
                    },
                    "404": {
                        "description": "service not found"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/register": {
            "post": {
                "tags": [
                    "userAuth"
                ],
                "summary": "Register a new user",
                "operationId": "2f25885f3b6f61ca11724ec302d2e439",
                "requestBody": {
                    "required": true,
                    "content": {
                        "multipart/form-data": {
                            "schema": {
                                "properties": {
                                    "name": {
                                        "description": "User's name",
                                        "type": "string"
                                    },
                                    "email": {
                                        "description": "User's email",
                                        "type": "string"
                                    },
                                    "password": {
                                        "description": "User's password",
                                        "type": "string"
                                    },
                                    "phone": {
                                        "description": "User's phone",
                                        "type": "string"
                                    },
                                    "image": {
                                        "description": "User's image",
                                        "type": "string",
                                        "format": "binary"
                                    },
                                    "userType": {
                                        "description": "userType choose between ['user','employee','admin']",
                                        "type": "string"
                                    },
                                    "comment": {
                                        "description": "to access image use https://mahllola.online/public/image  example : https://mahllola.online/public/storage/services_folder/ttyVNuauz67kqXX40jyewMwh3DWpdFjjyJ0pIiPd.jpg ",
                                        "type": "string"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "User registered successfully"
                    },
                    "422": {
                        "description": "Validation errors"
                    }
                }
            }
        },
        "/api/user/editUserProfile/{user_id}": {
            "post": {
                "tags": [
                    "userAuth"
                ],
                "summary": "Edit user profile",
                "operationId": "a41bc6a5c2fc58150505dbf2c1c90de4",
                "parameters": [
                    {
                        "name": "user_id",
                        "in": "path",
                        "description": "ID of the user",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "multipart/form-data": {
                            "schema": {
                                "properties": {
                                    "name": {
                                        "description": "Name",
                                        "type": "string"
                                    },
                                    "image": {
                                        "description": "Image file",
                                        "type": "string",
                                        "format": "binary"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Update profile successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "success"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Profile updated successfully"
                                        },
                                        "data": {
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "error"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Invalid input data"
                                        },
                                        "errors": {
                                            "type": "object",
                                            "example": {
                                                "name": [
                                                    "The name field is required."
                                                ]
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "error"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Unauthorized action"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation errors",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "error"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Validation error"
                                        },
                                        "errors": {
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/user": {
            "get": {
                "tags": [
                    "userAuth"
                ],
                "summary": "Get logged-in user details",
                "operationId": "68f71ba285837ee66901e2681a219252",
                "responses": {
                    "200": {
                        "description": "Success"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/logout": {
            "get": {
                "tags": [
                    "userAuth"
                ],
                "summary": "User logout",
                "operationId": "8992dd4fbd21ecd6bd79f84228dc98cf",
                "responses": {
                    "200": {
                        "description": "Successfully logged out",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "success"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Successfully logged out"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Unauthorized"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        }
    },
    "components": {
        "securitySchemes": {
            "bearerAuth": {
                "type": "http",
                "bearerFormat": "JWT",
                "scheme": "bearer"
            }
        }
    },
    "tags": [
        {
            "name": "Employee",
            "description": "Employee"
        },
        {
            "name": "location",
            "description": "location"
        },
        {
            "name": "userAuth",
            "description": "userAuth"
        },
        {
            "name": "sections",
            "description": "sections"
        },
        {
            "name": "services",
            "description": "services"
        }
    ]
}